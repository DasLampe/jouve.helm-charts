{{- if eq .Values.architecture "standalone" }}
apiVersion: {{ template "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "common.names.fullname" . }}-controller-manager
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" . ) | nindent 4 }}
    control-plane: controller-manager
  {{- with .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" . "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: 1
  {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.podLabels .Values.commonLabels ) "context" . ) | fromYaml }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 6 }}
      control-plane: controller-manager
  template:
    metadata:
      labels: {{- include "common.labels.standard" ( dict "customLabels" $podLabels "context" $ ) | nindent 8 }}
        app.kubernetes.io/component: webhook-server
        control-plane: controller-manager
      {{- if or .Values.podAnnotations (and .Values.metrics.enabled (not .Values.metrics.serviceMonitor.enabled)) }}
      annotations:
        {{- with .Values.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}
        {{- end }}
        {{- if and .Values.metrics.enabled (not .Values.metrics.serviceMonitor.enabled) }}
        prometheus.io/scrape: "true"
        {{- end }}
      {{- end }}
    spec:
      {{- include "common.images.renderPullSecrets" (dict "images" (list .Values.image) "context" $) | nindent 6 }}
      hostNetwork: {{ .Values.hostNetwork }}
      containers:
        - args:
            - --webhook-server-port=9443
            - --metrics-addr=:8080
            - --max-reconciles=10
            - --apiserver-qps-throttle=50
            - --excluded-namespace=kube-system
            - --excluded-namespace=kube-public
            - --excluded-namespace={{ template "common.names.namespace" . }}
            - --excluded-namespace=kube-node-lease
            {{- range .Values.excludedNamespaces }}
            - --excluded-namespace={{ . }}
            {{- end }}
            - --nopropagation-label=cattle.io/creator=norman
            {{- if not .Values.certManager.enabled }}
            - --enable-internal-cert-management
            - --cert-restart-on-secret-refresh
            {{- end }}
            {{- if .Values.hrq.enabled }}
            - --enable-hrq
            {{- end }}
            {{- range .Values.managedNamespaceLabels }}
            - --managed-namespace-label={{ . }}
            {{- end }}
            {{- range .Values.managedNamespaceAnnotations }}
            - --managed-namespace-annotation={{ . }}
            {{- end }}
          command:
            - /manager
          image: {{ template "common.images.image" (dict "imageRoot" .Values.image "global" .Values.global) }}
          livenessProbe:
            failureThreshold: 1
            httpGet:
              path: /healthz
              port: 8081
            periodSeconds: 10
          name: manager
          ports:
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
            - containerPort: 8080
              name: metrics
              protocol: TCP
            - containerPort: 8081
              name: healthz
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            periodSeconds: 5
          resources: {{- include "common.tplvalues.render" (dict "value" .Values.resources "context" .) | nindent 12 }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          startupProbe:
            failureThreshold: 100
            httpGet:
              path: /readyz
              port: 8081
            periodSeconds: 5
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 1000
      terminationGracePeriodSeconds: 10
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: {{ template "common.names.fullname" . }}-webhook-server-cert
{{- end }}
